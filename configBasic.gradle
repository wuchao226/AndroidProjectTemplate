/**
 * 最基类的，公共的配置模块，（一般不直接使用），只是给别的配置文件继承使用
 */
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-parcelize'

android {
    compileSdk Integer.parseInt(libs.versions.compileSdk.get())
    // 资源目录存放指引：https://developer.android.google.cn/guide/topics/resources/providing-resources
    defaultConfig {
        minSdk = Integer.parseInt(libs.versions.minSdk.get())
        targetSdk = Integer.parseInt(libs.versions.targetSdk.get())
        versionCode = Integer.parseInt(libs.versions.versionCode.get())
        versionName = libs.versions.versionName.get()
        testInstrumentationRunner = libs.versions.testInstrumentationRunner.get()
        vectorDrawables {
            useSupportLibrary = true
        }
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

kapt {
    arguments {
         arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    //基础
    implementation(libs.bundles.appcompatBundles)
    implementation(libs.bundles.kotlinBundles)
    implementation(libs.bundles.widgetBundles)
    implementation(libs.bundles.lifecycleBundles)
    kapt(libs.lifecycle.compiler)

    //theRouter
    implementation(libs.theRouter)
    kapt(libs.theRouter.apt)

    implementation(libs.auto.service)
    kapt(libs.auto.service.annotations)

    //junit
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidJunit)
    androidTestImplementation(libs.espresso)
}