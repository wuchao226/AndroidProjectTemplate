/**
 * 运行模块初始化gradle配置，可以依赖这个配置 再配置别的依赖
 * 上层的配置和module_config同级别-供真正能运行的模块配置，如app组件
 */
apply plugin: 'com.android.application'
//apply plugin: 'therouter'

// 重复的配置统一由基类提供
apply from: rootProject.file('configBasic.gradle')

android {
    defaultConfig {
        // 无痛修改包名：https://www.jianshu.com/p/17327e191d2e
        applicationId "com.wuc.project"
    }
    // Apk 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
    signingConfigs {
        config {
            storeFile file("${project.rootDir}/${project.store_file}")
            storePassword project.store_password
            keyAlias project.key_alias
            keyPassword project.key_password
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    // 构建配置：https://developer.android.google.cn/studio/build/build-variants
     buildTypes {
        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.config
            // 日志打印开关
            buildConfigField "boolean", "LOG_ENABLE", "false"
            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // 给包名添加后缀
            applicationIdSuffix '.debug'
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.config
            // 日志打印开关
            buildConfigField "boolean", "LOG_ENABLE", "true"
            // 添加清单占位符
            addManifestPlaceholders([
                    'app_name'    :    '安卓技术中台 Debug 版'
            ])
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }

    applicationVariants.all { variant ->
        // apk 输出文件名配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }
}

dependencies {
    // Module模块默认添加 lib_common 模块的
    implementation(project(":lib_common"))
}